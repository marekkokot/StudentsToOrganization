@model StudentsToOrganization.Models.StudentData

@{
    ViewBag.Title = "Dodawanie studenta";
}
<div style="border:2px dashed black;padding:5px 10px;left:45%;position:absolute;font-size:1.2em;width:40%; text-align:justify; background-color: azure;">
    <h2>Prośba do prowadzących</h2>
    <div style="border:1px dashed black;background-color: aquamarine;padding:5px;">
        <span style="font-size: 1.1em;">Po utworzeniu konta za pomocą niniejszego formularza proszę o <b>nie</b> zmienianie nazwy repozytorium ani teamu z poziomu github.com.</span>
    </div>
    <br />
    Uzasadnione jest to tym, że w celu poprawnego zarządzania repozytoriami przez stronę www (w szególności archiwizowanie i usuwanie repozytoriów po zakończeniu semestru) konieczne jest spełnienie wymogów co do nazwy teamu i repozytorium.
    <br />
    <br />
    W przypadku konieczności zmiany nazwy (bo przykładowo student jest jednak w innej sekcji bądź grupie bądź pojawił się błąd w jego imieniu/nazwisku) proszę o zgłoszenie takiej informacji mailowo:
    <a href="mailto:marek.kokot@poczta.polsl.pl">marek.kokot@poczta.polsl.pl</a> 
    <br />
    <br />
    <span style="font-size: 1em">
        Zasady nazwenictwa teamów i repozytoriów są kolejno następujące: <br />
        <span style="font-family:Consolas;">&ltImie&gt-&ltNazwisko&gt-gr&ltGrupa&gt&ltSekcja&gt</span> <br />
        <span style="font-family:Consolas;">&ltImie&gt-&ltNazwisko&gt-gr&ltGrupa&gt&ltSekcja&gt-repo</span> <br />
        Przykładowo, dla studenta <a href="https://www.youtube.com/watch?v=AfKZclMWS1U">Grzegorza Brzęczyszczykiewicza</a>, który jest w grupie 3, sekcji 2 zostanie utworzone: <br />
        <span style="font-family:Consolas;">Grzegorz-Brzeczyszczykiewicz-gr32</span> <br />
        <span style="font-family:Consolas;">Grzegorz-Brzeczyszczykiewicz-gr32-repo</span> <br />
        Zwracam uwagę, że polskie ogonki zostają usunięte, gdyż github nie obsługuje prawidłowo polskich znaków w nazwach repo i teamów. <br />
        Zamiast zgłaszania konieczności zmiany nazwy można zrobić to ręcznie, ale proszę o zachowanie zasad nazwenictwa i spójności nazwy repozytorium i teamu.
        <br />
        Przykładowo jeśli nasz hipotetycznych Grzegorz bardzo chce być jednak w sekcji pierwszej i wyrażamy na to zgodę, nazwy jego teamu i repozytium powinny się zmienić na: <br />
        <span style="font-family:Consolas;">Grzegorz-Brzeczyszczykiewicz-gr3<b>1</b></span> <br />
        <span style="font-family:Consolas;">Grzegorz-Brzeczyszczykiewicz-gr3<b>1</b>-repo</span> <br />
</span>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>StudentData</h4>*@
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.GitLogin, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GitLogin)
                @Html.ValidationMessageFor(model => model.GitLogin)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.SecondName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecondName)
                    @Html.ValidationMessageFor(model => model.SecondName)
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname)
                @Html.ValidationMessageFor(model => model.Surname)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Group, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Group)
                @Html.ValidationMessageFor(model => model.Group)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Section, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Section)
                @Html.ValidationMessageFor(model => model.Section)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}